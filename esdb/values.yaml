#Default values for eventstoredb deployment
#Ensure that you provide the relevant values for the public URLs

#Configure the eventstore cluster
deployment:
  
  clusterSize: 3
  
  #Public Node hostnames
  #Will be set on ingress controller
  #Note that strange errors will occur if a host is not provided for all cluster nodes
  hosts:
    '0': 'a.esdb.example.com'
    '1': 'b.esdb.example.com'
    '2': 'c.esdb.example.com'
  
  #Configure storage for EventStore data
  storage:
    class: premium
    annotations: {}
    size: 100Gi

  #Custom eventstore config YAML
  #Note that we can use actual YAML here (rather than a string)
  config:
    shared: {}

    '0': { }
    '1': { }
    '2': { }
    
  logs:
    #Set to true if you wish to persist logs to a persistent volume
    persist: false

    #Configure the PersistentVolumeClaim for log files
    storage:
      # class: standard
      # annotations: {}
      # size: 1Gi #By default, the maximum log file size for EventstoreDB is 1 GB
  
  image:
    repository: eventstore/eventstore
    #If tag is not provided, then chart [appversion]-bionic will be used
    tag: ""
    pullPolicy: IfNotPresent
  
  #No readiness probe is defined, since EventStore is a stateful clustered service
  #Even nodes which are not ready should be exposed to clients, who will act accordingly

  livenessProbe:
    enabled: true
    path: /gossip
    failureThreshold: 18
    initialDelaySeconds: 0
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    
  #Configure the node resource limits
  #It is strongly recommend specifying limits to assist with pod scheduling

  resources: {}
  #   requests:
  #     memory: 512Mi
  #     cpu: 128m
  #   limits:
  #     memory: 2Gi
  #     cpu: '1'
    
  
  #StatefulSet annotations
  annotations: {}
  
  podAnnotations: {}
  
  nodeSelector: {}
  
  terminationGracePeriodSeconds: 120
  
  podSecurityContext:
    #The default eventstore images run as the user eventstore:1000
    fsGroup: 1000
    
  affinity: {}
  
  imagePullSecrets: []

#Configure the ingress resource
#Backend protocol must be GRPCS
#Note that the provided certificate is self-signed (i.e. from es-gencert-cli)
ingress:
  tlsSecretName: ""
  class: ""
  annotations: {}

#Configure the service account to run under
serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is automatically generated
  name: ""

#Configure certificate validity in days
certificatesLength:
  ca: 3650
  node: 3650

backup:
  enable: false

  #Configure backup deployment
  deployment:
    replicas: 1

    image: {}
    # image:
    #   repository: ""
    #   tag: ""
    #   pullPolicy: IfNotPresent

    nodeSelector:
      kubernetes.io/os: linux
    
    imagePullSecrets: []

    annotations: {}

    podAnnotations: {}

    podSecurityContext: {}

    #Configure the node resource limits
    #It is strongly recommend specifying limits to assist with pod scheduling

    #Note that this pod will be mostly idle, since it functions mostly as a reverse proxy

    resources: {}
    #   requests:
    #     memory: 50Mi
    #     cpu: 10m
    #   limits:
    #     memory: 256Mi
    #     cpu: 128m

    liveness:
      failureThreshold: 6
      periodSeconds: 10

      